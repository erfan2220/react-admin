import "./Setting.css"
import {useState} from "react";
import UserTable from "../../Component/UserTable/UserTable.tsx";
import Task from "../../Component/Tak Schedule/Task.tsx";
import Other_settings from "../../Component/Other_Settings/Other_settings.tsx";



const Settings = () =>
{

    const [activeIndex,setActiveIndex]=useState(1)
    const [newUser,setNewUser]=useState(false)
    const [filterSort,setFilterSort]=useState(false)











    return (
        <div className="ALl-of-Inventory-container">
            <div className="settings-menu">

                <div className="settings-items" onClick={() => {
                    setActiveIndex(1)
                }}>
                    <svg width="24" height="24" viewBox="0 0 24 24" fill={activeIndex === 1 ? "#007BFF" : "#FFF"}
                         xmlns="http://www.w3.org/2000/svg">
                        <g opacity="0.9">
                            <path
                                d="M21.3986 5.91281L20.9617 5.66063C21.013 5.38927 21.013 5.11073 20.9617 4.83938L21.3986 4.58719C21.5709 4.48773 21.6966 4.3239 21.7481 4.13173C21.7997 3.93957 21.7727 3.73481 21.6733 3.5625C21.5738 3.39019 21.41 3.26445 21.2178 3.21294C21.0257 3.16142 20.8209 3.18836 20.6486 3.28781L20.2108 3.54094C20.0012 3.36118 19.7603 3.22165 19.5001 3.12938V2.625C19.5001 2.42609 19.4211 2.23532 19.2805 2.09467C19.1398 1.95402 18.9491 1.875 18.7501 1.875C18.5512 1.875 18.3605 1.95402 18.2198 2.09467C18.0792 2.23532 18.0001 2.42609 18.0001 2.625V3.12938C17.74 3.22165 17.499 3.36118 17.2895 3.54094L16.8517 3.28781C16.7664 3.23857 16.6722 3.20661 16.5745 3.19376C16.4769 3.18091 16.3776 3.18743 16.2825 3.21294C16.1873 3.23844 16.0981 3.28244 16.02 3.34242C15.9418 3.4024 15.8763 3.47718 15.827 3.5625C15.7778 3.64782 15.7458 3.742 15.733 3.83967C15.7201 3.93734 15.7266 4.03658 15.7521 4.13173C15.7777 4.22688 15.8216 4.31608 15.8816 4.39423C15.9416 4.47237 16.0164 4.53794 16.1017 4.58719L16.5386 4.83938C16.4873 5.11073 16.4873 5.38927 16.5386 5.66063L16.1017 5.91281C15.9586 5.99533 15.8468 6.12275 15.7836 6.27532C15.7203 6.42789 15.7092 6.59706 15.752 6.75659C15.7947 6.91612 15.8889 7.05708 16.02 7.1576C16.151 7.25811 16.3116 7.31256 16.4767 7.3125C16.6084 7.31291 16.7378 7.27829 16.8517 7.21219L17.2895 6.95906C17.499 7.13882 17.74 7.27835 18.0001 7.37063V7.875C18.0001 8.07391 18.0792 8.26468 18.2198 8.40533C18.3605 8.54598 18.5512 8.625 18.7501 8.625C18.9491 8.625 19.1398 8.54598 19.2805 8.40533C19.4211 8.26468 19.5001 8.07391 19.5001 7.875V7.37063C19.7603 7.27835 20.0012 7.13882 20.2108 6.95906L20.6486 7.21219C20.7625 7.27829 20.8919 7.31291 21.0236 7.3125C21.1887 7.31256 21.3493 7.25811 21.4803 7.1576C21.6114 7.05708 21.7056 6.91612 21.7483 6.75659C21.7911 6.59706 21.78 6.42789 21.7167 6.27532C21.6535 6.12275 21.5416 5.99533 21.3986 5.91281ZM18.0001 5.25C18.0001 5.10166 18.0441 4.95666 18.1265 4.83332C18.209 4.70999 18.3261 4.61386 18.4631 4.55709C18.6002 4.50032 18.751 4.48547 18.8965 4.51441C19.0419 4.54335 19.1756 4.61478 19.2805 4.71967C19.3854 4.82456 19.4568 4.9582 19.4857 5.10368C19.5147 5.24917 19.4998 5.39997 19.4431 5.53701C19.3863 5.67406 19.2902 5.79119 19.1668 5.8736C19.0435 5.95601 18.8985 6 18.7501 6C18.5512 6 18.3605 5.92098 18.2198 5.78033C18.0792 5.63968 18.0001 5.44891 18.0001 5.25ZM20.7517 9.76031C20.5555 9.79314 20.3804 9.90255 20.2649 10.0645C20.1494 10.2264 20.103 10.4276 20.1358 10.6238C20.2119 11.0785 20.2502 11.5389 20.2501 12C20.2519 14.0196 19.5097 15.969 18.1651 17.4759C17.3287 16.2638 16.1525 15.3261 14.7845 14.7806C15.5193 14.2019 16.0556 13.4085 16.3186 12.5108C16.5816 11.6132 16.5584 10.6559 16.2521 9.77207C15.9458 8.88825 15.3718 8.12183 14.6097 7.5794C13.8477 7.03696 12.9355 6.74548 12.0001 6.74548C11.0648 6.74548 10.1526 7.03696 9.39058 7.5794C8.62854 8.12183 8.05446 8.88825 7.7482 9.77207C7.44193 10.6559 7.41869 11.6132 7.68171 12.5108C7.94474 13.4085 8.48094 14.2019 9.21577 14.7806C7.84779 15.3261 6.67161 16.2638 5.83515 17.4759C4.7802 16.2872 4.09109 14.8189 3.85069 13.2479C3.61029 11.6768 3.82882 10.0697 4.48002 8.61981C5.13122 7.16996 6.18736 5.93908 7.52145 5.07516C8.85553 4.21125 10.4108 3.75108 12.0001 3.75C12.4613 3.74993 12.9216 3.78818 13.3764 3.86438C13.5717 3.89519 13.7712 3.84764 13.9317 3.73208C14.0921 3.61652 14.2004 3.44229 14.233 3.2473C14.2656 3.0523 14.2199 2.85231 14.1059 2.69082C13.9918 2.52934 13.8186 2.41943 13.6239 2.385C11.5871 2.04236 9.49415 2.35588 7.64718 3.28029C5.8002 4.2047 4.2948 5.69217 3.34832 7.52793C2.40184 9.3637 2.06326 11.4528 2.38147 13.4935C2.69968 15.5342 3.65821 17.421 5.11866 18.8815C6.57911 20.3419 8.46592 21.3005 10.5067 21.6187C12.5474 21.9369 14.6364 21.5983 16.4722 20.6518C18.308 19.7053 19.7954 18.1999 20.7199 16.353C21.6443 14.506 21.9578 12.413 21.6151 10.3763C21.5823 10.1801 21.4729 10.005 21.311 9.88947C21.1491 9.77396 20.9479 9.7275 20.7517 9.76031ZM9.00015 11.25C9.00015 10.6567 9.17609 10.0766 9.50574 9.58329C9.83538 9.08994 10.3039 8.70542 10.8521 8.47836C11.4003 8.2513 12.0035 8.19189 12.5854 8.30764C13.1674 8.4234 13.7019 8.70912 14.1215 9.12868C14.541 9.54824 14.8267 10.0828 14.9425 10.6647C15.0583 11.2467 14.9988 11.8499 14.7718 12.3981C14.5447 12.9462 14.1602 13.4148 13.6669 13.7444C13.1735 14.0741 12.5935 14.25 12.0001 14.25C11.2045 14.25 10.4414 13.9339 9.87883 13.3713C9.31622 12.8087 9.00015 12.0457 9.00015 11.25ZM6.94515 18.5156C7.48771 17.6671 8.23515 16.9688 9.11857 16.4851C10.002 16.0013 10.993 15.7478 12.0001 15.7478C13.0073 15.7478 13.9983 16.0013 14.8817 16.4851C15.7651 16.9688 16.5126 17.6671 17.0551 18.5156C15.6098 19.6397 13.8311 20.2499 12.0001 20.2499C10.1692 20.2499 8.39046 19.6397 6.94515 18.5156Z"
                                fill={activeIndex === 1 ? "#007BFF" : "#FFF"}/>
                        </g>
                    </svg>
                    <span className={activeIndex === 1 ? "active" : ""}>User Management </span>
                </div>

                <div className="settings-items" onClick={() => {
                    setActiveIndex(2)
                }}>
                    <svg width="24" height="24" viewBox="0 0 24 24" fill={activeIndex === 2 ? "#007BFF" : "#FFF"}
                         xmlns="http://www.w3.org/2000/svg">
                        <g opacity="0.9">
                            <path
                                d="M19.5 3H17.25V2.25C17.25 2.05109 17.171 1.86032 17.0303 1.71967C16.8897 1.57902 16.6989 1.5 16.5 1.5C16.3011 1.5 16.1103 1.57902 15.9697 1.71967C15.829 1.86032 15.75 2.05109 15.75 2.25V3H8.25V2.25C8.25 2.05109 8.17098 1.86032 8.03033 1.71967C7.88968 1.57902 7.69891 1.5 7.5 1.5C7.30109 1.5 7.11032 1.57902 6.96967 1.71967C6.82902 1.86032 6.75 2.05109 6.75 2.25V3H4.5C4.10218 3 3.72064 3.15804 3.43934 3.43934C3.15804 3.72064 3 4.10218 3 4.5V19.5C3 19.8978 3.15804 20.2794 3.43934 20.5607C3.72064 20.842 4.10218 21 4.5 21H19.5C19.8978 21 20.2794 20.842 20.5607 20.5607C20.842 20.2794 21 19.8978 21 19.5V4.5C21 4.10218 20.842 3.72064 20.5607 3.43934C20.2794 3.15804 19.8978 3 19.5 3ZM6.75 4.5V5.25C6.75 5.44891 6.82902 5.63968 6.96967 5.78033C7.11032 5.92098 7.30109 6 7.5 6C7.69891 6 7.88968 5.92098 8.03033 5.78033C8.17098 5.63968 8.25 5.44891 8.25 5.25V4.5H15.75V5.25C15.75 5.44891 15.829 5.63968 15.9697 5.78033C16.1103 5.92098 16.3011 6 16.5 6C16.6989 6 16.8897 5.92098 17.0303 5.78033C17.171 5.63968 17.25 5.44891 17.25 5.25V4.5H19.5V7.5H4.5V4.5H6.75ZM19.5 19.5H4.5V9H19.5V19.5ZM10.5 11.25V17.25C10.5 17.4489 10.421 17.6397 10.2803 17.7803C10.1397 17.921 9.94891 18 9.75 18C9.55109 18 9.36032 17.921 9.21967 17.7803C9.07902 17.6397 9 17.4489 9 17.25V12.4631L8.58563 12.6713C8.4076 12.7603 8.2015 12.7749 8.01268 12.712C7.82385 12.649 7.66776 12.5137 7.57875 12.3356C7.48974 12.1576 7.47509 11.9515 7.53803 11.7627C7.60097 11.5739 7.73635 11.4178 7.91437 11.3287L9.41437 10.5787C9.52876 10.5215 9.65589 10.4945 9.78367 10.5002C9.91145 10.506 10.0356 10.5443 10.1444 10.6116C10.2532 10.6788 10.343 10.7728 10.4052 10.8845C10.4675 10.9963 10.5001 11.1221 10.5 11.25ZM16.0463 14.1047L14.25 16.5H15.75C15.9489 16.5 16.1397 16.579 16.2803 16.7197C16.421 16.8603 16.5 17.0511 16.5 17.25C16.5 17.4489 16.421 17.6397 16.2803 17.7803C16.1397 17.921 15.9489 18 15.75 18H12.75C12.6107 18 12.4742 17.9612 12.3557 17.888C12.2372 17.8148 12.1415 17.71 12.0792 17.5854C12.0169 17.4608 11.9905 17.3214 12.003 17.1826C12.0155 17.0439 12.0664 16.9114 12.15 16.8L14.8481 13.2028C14.9095 13.1211 14.9535 13.0277 14.9775 12.9284C15.0015 12.8291 15.0049 12.7259 14.9876 12.6252C14.9703 12.5245 14.9325 12.4284 14.8767 12.3428C14.8209 12.2572 14.7482 12.1839 14.6631 12.1274C14.5779 12.0709 14.4821 12.0324 14.3816 12.0143C14.281 11.9961 14.1778 11.9987 14.0783 12.0219C13.9788 12.0451 13.885 12.0884 13.8028 12.1491C13.7206 12.2098 13.6517 12.2867 13.6003 12.375C13.5525 12.463 13.4876 12.5406 13.4093 12.6031C13.3311 12.6656 13.2411 12.7118 13.1447 12.739C13.0483 12.7661 12.9474 12.7737 12.8481 12.7613C12.7487 12.7489 12.6528 12.7166 12.5661 12.6665C12.4794 12.6165 12.4035 12.5495 12.3431 12.4696C12.2827 12.3898 12.2389 12.2986 12.2142 12.2015C12.1896 12.1044 12.1847 12.0034 12.1997 11.9044C12.2148 11.8054 12.2495 11.7104 12.3019 11.625C12.5496 11.1963 12.9319 10.8612 13.3894 10.6718C13.8469 10.4824 14.3541 10.4493 14.8324 10.5774C15.3107 10.7056 15.7333 10.988 16.0348 11.3808C16.3363 11.7736 16.4998 12.2548 16.5 12.75C16.5016 13.2391 16.3421 13.7152 16.0463 14.1047Z"
                                fill={activeIndex === 2 ? "#007BFF" : "#FFF"}/>
                        </g>
                    </svg>

                    <span className={activeIndex === 2 ? "active" : ""}>Task Schadule </span>
                </div>

                <div className="settings-items" onClick={() => {
                    setActiveIndex(3)
                }}>
                    <svg width="24" height="24" viewBox="0 0 24 24" fill={activeIndex === 3 ? "#007BFF" : ""}
                         xmlns="http://www.w3.org/2000/svg">
                        <g opacity="0.9">
                            <path
                                d="M21.2586 6.46911C21.2131 6.35666 21.141 6.25693 21.0485 6.17846C20.956 6.09999 20.8458 6.04513 20.7275 6.01859C20.6091 5.99204 20.4861 5.9946 20.3689 6.02604C20.2518 6.05748 20.144 6.11687 20.0548 6.19911L16.2767 9.68567L14.6614 9.3388L14.3145 7.72348L17.8011 3.94536C17.8833 3.85619 17.9427 3.74841 17.9741 3.63126C18.0056 3.5141 18.0081 3.39107 17.9816 3.27271C17.955 3.15435 17.9002 3.0442 17.8217 2.9517C17.7432 2.85919 17.6435 2.7871 17.5311 2.74161C16.5063 2.32708 15.3954 2.17056 14.2961 2.28581C13.1967 2.40106 12.1424 2.78456 11.2259 3.40259C10.3094 4.02063 9.55871 4.8543 9.03979 5.83034C8.52086 6.80639 8.2496 7.89494 8.24982 9.00036C8.2486 9.93381 8.4401 10.8575 8.81232 11.7135L3.16763 16.5941C3.15357 16.6054 3.14044 16.6185 3.12732 16.6307C2.56464 17.1933 2.24854 17.9565 2.24854 18.7522C2.24854 19.1462 2.32614 19.5364 2.47692 19.9004C2.6277 20.2644 2.84871 20.5952 3.12732 20.8738C3.40592 21.1524 3.73668 21.3734 4.1007 21.5242C4.46471 21.675 4.85487 21.7526 5.24888 21.7526C6.04462 21.7526 6.80777 21.4365 7.37044 20.8738C7.38263 20.8616 7.39575 20.8475 7.407 20.8344L12.2867 15.1879C13.3146 15.6391 14.4388 15.8268 15.5575 15.734C16.6763 15.6413 17.7542 15.271 18.6938 14.6567C19.6333 14.0423 20.4049 13.2034 20.9385 12.2157C21.4721 11.2281 21.7509 10.1229 21.7498 9.00036C21.7513 8.13278 21.5844 7.27316 21.2586 6.46911ZM14.9998 14.2504C14.1121 14.2491 13.2391 14.0234 12.462 13.5941C12.3115 13.5109 12.1369 13.482 11.9676 13.5123C11.7983 13.5425 11.6445 13.6299 11.532 13.76L6.29138 19.8294C6.00778 20.0989 5.63016 20.2468 5.23902 20.2418C4.84787 20.2368 4.47416 20.0792 4.19756 19.8026C3.92096 19.526 3.76335 19.1523 3.75834 18.7612C3.75334 18.37 3.90132 17.9924 4.17075 17.7088L10.2354 12.4691C10.3658 12.3566 10.4534 12.2026 10.4836 12.0331C10.5138 11.8636 10.4848 11.6888 10.4014 11.5382C9.92328 10.6735 9.69891 9.69138 9.75406 8.70484C9.80922 7.7183 10.1417 6.76735 10.7132 5.96131C11.2847 5.15528 12.072 4.52688 12.9847 4.14837C13.8974 3.76986 14.8984 3.6566 15.8726 3.82161L12.9476 6.9913C12.8662 7.07958 12.8072 7.18612 12.7756 7.30195C12.7439 7.41778 12.7406 7.53951 12.7658 7.65692L13.2964 10.1254C13.3267 10.2665 13.3972 10.396 13.4993 10.4981C13.6014 10.6002 13.7308 10.6706 13.872 10.701L16.3423 11.2316C16.4597 11.2568 16.5815 11.2534 16.6973 11.2218C16.8131 11.1901 16.9197 11.1311 17.0079 11.0497L20.1776 8.12473C20.304 8.87755 20.2648 9.64886 20.0629 10.385C19.861 11.1212 19.5011 11.8045 19.0083 12.3875C18.5156 12.9705 17.9017 13.4391 17.2094 13.7608C16.5172 14.0825 15.7632 14.2496 14.9998 14.2504Z"
                                fill={activeIndex === 3 ? "#007BFF" : "#FFF"}/>
                        </g>
                    </svg>

                    <span className={activeIndex === 3 ? "active" : ""}>Other Settings </span>
                </div>

            </div>


            <div className="inventory_container">
                <div>
                    <h1>Settings</h1>

                    {
                        activeIndex ===2 &&(
                            <Task/>
                        )
                    }
                    {
                        activeIndex ===3 &&(
                            <Other_settings/>
                        )
                    }

















                    { ( activeIndex ===1 ) && (
                    <div className="settings_container_2">
                        <div className="User_Management">
                            <img src="./UserCircleGear_2.svg" alt=""/>
                            <h1>User Management</h1>
                        </div>

                        <div className="rowing_buttons_setting">
                            <div className="New_User_Settings" onClick={()=>{
                                setNewUser(!newUser)
                            }}>
                                <img src="./plus.svg" alt=""/>
                                <span>New User</span>
                            </div>

                            <div className="Filter_Sort_Settings" onClick={()=>{
                                setFilterSort(!filterSort)
                            }}>
                                <img src="./Filter.svg" alt=""/>
                                <span>Filter & Sort</span>
                            </div>
                        </div>
                    </div>
                    )}
                </div>

                { ( activeIndex ===1 ) && (
                <UserTable/>
                )}
            </div>

            {(newUser ||  filterSort)&&(
                <div>
                    <div className="New_User_Form_container">

                    </div>

                    {
                        newUser && (
                    <div className="New_User_Form_Wrapper">

                        <div className="New_User_Form">
                            <label>Username</label>

                            <div className="items_New_User">
                                <input type="text" placeholder="MCI Guest"/>
                                <img src="./UserCircle_NewUser.svg" alt=""/>
                            </div>
                        </div>

                        <div className="New_User_Form">
                            <label>Current Password</label>

                            <div className="items_New_User">
                                <input type="text" placeholder="Current Password"/>
                                <img src="./Lock.svg" alt=""/>
                            </div>
                        </div>


                        <div className="New_User_Form">
                            <label>New Password</label>

                            <div className="items_New_User">
                                <input type="text" placeholder="Type your new password here"/>
                                <img src="./Lock.svg" alt=""/>
                            </div>
                        </div>

                        <div className="New_User_Form">
                            <label>Role</label>

                            <div className="items_New_User">
                                <input type="text" placeholder="Admin"/>
                                <img src="./arrow_down_User.svg" alt=""/>
                            </div>
                        </div>

                        <div className=" buttons_user_form">

                            <button id="Edit"> Edit</button>
                            <button id="Cancel" onClick={()=>{
                                setNewUser(!newUser)
                            }}> Cancel</button>

                        </div>


                    </div>

                        )
                    }

                    {
                        filterSort && (
                            <div className="Filter_Form_Wrapper">

                                <div className="New_User_Form">
                                    <label>Sort by</label>
                                    <div className="items_New_User">
                                        <input type="text" placeholder="MCI Guest"/>
                                        <img src="./arrow_down_User.svg" alt=""/>
                                    </div>
                                </div>

                                <div className="New_User_Form">
                                    <label>Filter by Role</label>

                                    <div className="items_New_User">
                                        <input type="text" placeholder="Admin"/>
                                        <img src="./arrow_down_User.svg" alt=""/>
                                    </div>
                                </div>

                                <div className=" buttons_user_form">

                                    <button id="Edit"> Sort & Filter</button>
                                    <button id="Cancel" onClick={() => {
                                        setFilterSort(!filterSort)
                                    }}> Cancel
                                    </button>

                                </div>


                            </div>
                        )
                    }
                </div>
            )}


        </div>
    );
};

export default Settings;